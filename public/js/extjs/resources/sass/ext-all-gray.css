<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Sass::SyntaxError at &#x2F;js&#x2F;extjs&#x2F;resources&#x2F;sass&#x2F;ext-all-gray.css</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>Sass::SyntaxError</strong> at <strong>&#x2F;js&#x2F;extjs&#x2F;resources&#x2F;sass&#x2F;ext-all-gray.css
          </strong></h1>
        <h2>File to import not found or unreadable: compass.
Load path: &#x2F;home&#x2F;greg&#x2F;WORK&#x2F;AUXILIAE&#x2F;sinatra-bootstrap</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            class_methods.rb</code></li>
          <li><strong>location:</strong> <code>nil
            </code></li>
          <li class="last"><strong>line:
            </strong> 118</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;import_node.rb</code> in
                <code><strong>rescue in import</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>        if paths.size == 1
</code></li>
                
                <li class="pre-context-line"><code>          message &lt;&lt; &quot;Load path: #{paths.first}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
                <li class="pre-context-line"><code>          message &lt;&lt; &quot;Load paths:\n  &quot; &lt;&lt; paths.join(&quot;\n  &quot;)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        raise SyntaxError.new(message)
</code></li>
                
                <li class="pre-context-line"><code>      rescue SyntaxError =&gt; e
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>        raise SyntaxError.new(e.message, :line =&gt; self.line, :filename =&gt; @filename)</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def options_for_importer
</code></li>
                
                <li class="post-context-line"><code>        @options.merge(:_line =&gt; line)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;import_node.rb</code> in
                <code><strong>import</strong></code>
            </li>

            <li class="code system">
              
              <ol start="38"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>          imported_file
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      private
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def import
</code></li>
                
              </ol>
              

              <ol start="45" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>        paths = @options[:load_paths]</code></li>
              </ol>

              
              <ol start="46" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if @options[:importer]
</code></li>
                
                <li class="post-context-line"><code>          f = @options[:importer].find_relative(
</code></li>
                
                <li class="post-context-line"><code>            @imported_filename, @options[:filename], options_for_importer)
</code></li>
                
                <li class="post-context-line"><code>          return f if f
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;import_node.rb</code> in
                <code><strong>imported_file</strong></code>
            </li>

            <li class="code system">
              
              <ol start="21"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>      def invisible?; to_s.empty?; end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Returns the imported file.
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Sass::Engine]
</code></li>
                
                <li class="pre-context-line"><code>      # @raise [Sass::SyntaxError] If no file could be found to import.
</code></li>
                
                <li class="pre-context-line"><code>      def imported_file
</code></li>
                
              </ol>
              

              <ol start="28" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>        @imported_file ||= import</code></li>
              </ol>

              
              <ol start="29" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Returns whether or not this import should emit a CSS @import declaration
</code></li>
                
                <li class="post-context-line"><code>      #
</code></li>
                
                <li class="post-context-line"><code>      # @return [Boolean] Whether or not this is a simple CSS @import declaration.
</code></li>
                
                <li class="post-context-line"><code>      def css_import?
</code></li>
                
                <li class="post-context-line"><code>        if @imported_filename =~ &#x2F;\.css$&#x2F;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;import_node.rb</code> in
                <code><strong>css_import?</strong></code>
            </li>

            <li class="code system">
              
              <ol start="30"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Returns whether or not this import should emit a CSS @import declaration
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Boolean] Whether or not this is a simple CSS @import declaration.
</code></li>
                
                <li class="pre-context-line"><code>      def css_import?
</code></li>
                
                <li class="pre-context-line"><code>        if @imported_filename =~ &#x2F;\.css$&#x2F;
</code></li>
                
                <li class="pre-context-line"><code>          @imported_filename
</code></li>
                
              </ol>
              

              <ol start="37" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>        elsif imported_file.is_a?(String) &amp;&amp; imported_file =~ &#x2F;\.css$&#x2F;</code></li>
              </ol>

              
              <ol start="38" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>          imported_file
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def import
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>visit_import</strong></code>
            </li>

            <li class="code system">
              
              <ol start="210"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>      []
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  # Returns a static DirectiveNode if this is importing a CSS file,
</code></li>
                
                <li class="pre-context-line"><code>  # or parses and includes the imported Sass file.
</code></li>
                
                <li class="pre-context-line"><code>  def visit_import(node)
</code></li>
                
              </ol>
              

              <ol start="217" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>    if path = node.css_import?</code></li>
              </ol>

              
              <ol start="218" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>      return Sass::Tree::CssImportNode.resolved(&quot;url(#{path})&quot;)
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    file = node.imported_file
</code></li>
                
                <li class="post-context-line"><code>    handle_import_loop!(node) if @stack.any? {|e| e[:filename] == file.options[:filename]}
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    begin
</code></li>
                
                <li class="post-context-line"><code>      @stack.push(:filename =&gt; node.filename, :line =&gt; node.line)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;base.rb</code> in
                <code><strong>visit</strong></code>
            </li>

            <li class="code system">
              
              <ol start="30"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>    # This can be overridden by subclasses that need to do something for each node.
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @param node [Tree::Node] The node to visit.
</code></li>
                
                <li class="pre-context-line"><code>    # @return [Object] The return value of the `visit_*` method for this node.
</code></li>
                
                <li class="pre-context-line"><code>    def visit(node)
</code></li>
                
                <li class="pre-context-line"><code>      method = &quot;visit_#{node_name node}&quot;
</code></li>
                
                <li class="pre-context-line"><code>      if self.respond_to?(method, true)
</code></li>
                
              </ol>
              

              <ol start="37" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>        self.send(method, node) {visit_children(node)}</code></li>
              </ol>

              
              <ol start="38" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        visit_children(node)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Visit the child nodes for a given node.
</code></li>
                
                <li class="post-context-line"><code>    # This can be overridden by subclasses that need to do something
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>visit</strong></code>
            </li>

            <li class="code system">
              
              <ol start="93"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>    @environment = env
</code></li>
                
                <li class="pre-context-line"><code>    # Stack trace information, including mixin includes and imports.
</code></li>
                
                <li class="pre-context-line"><code>    @stack = []
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  # If an exception is raised, this adds proper metadata to the backtrace.
</code></li>
                
                <li class="pre-context-line"><code>  def visit(node)
</code></li>
                
              </ol>
              

              <ol start="100" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>    super(node.dup)</code></li>
              </ol>

              
              <ol start="101" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>  rescue Sass::SyntaxError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>    e.modify_backtrace(:filename =&gt; node.filename, :line =&gt; node.line)
</code></li>
                
                <li class="post-context-line"><code>    raise e
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # Keeps track of the current environment.
</code></li>
                
                <li class="post-context-line"><code>  def visit_children(parent)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;base.rb</code> in
                <code><strong>block in visit_children</strong></code>
            </li>

            <li class="code system">
              
              <ol start="46"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # This method is run when `visit_*` methods `yield`,
</code></li>
                
                <li class="pre-context-line"><code>    # and its return value is returned from the `yield`.
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @param parent [Tree::Node] The parent node of the children to visit.
</code></li>
                
                <li class="pre-context-line"><code>    # @return [Array&lt;Object&gt;] The return values of the `visit_*` methods for the children.
</code></li>
                
                <li class="pre-context-line"><code>    def visit_children(parent)
</code></li>
                
              </ol>
              

              <ol start="53" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>      parent.children.map {|c| visit(c)}</code></li>
              </ol>

              
              <ol start="54" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    NODE_NAME_RE = &#x2F;.*::(.*?)Node$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Returns the name of a node as used in the `visit_*` method.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # @param [Tree::Node] node The node.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;base.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="46"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # This method is run when `visit_*` methods `yield`,
</code></li>
                
                <li class="pre-context-line"><code>    # and its return value is returned from the `yield`.
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @param parent [Tree::Node] The parent node of the children to visit.
</code></li>
                
                <li class="pre-context-line"><code>    # @return [Array&lt;Object&gt;] The return values of the `visit_*` methods for the children.
</code></li>
                
                <li class="pre-context-line"><code>    def visit_children(parent)
</code></li>
                
              </ol>
              

              <ol start="53" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>      parent.children.map {|c| visit(c)}</code></li>
              </ol>

              
              <ol start="54" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    NODE_NAME_RE = &#x2F;.*::(.*?)Node$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Returns the name of a node as used in the `visit_*` method.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # @param [Tree::Node] node The node.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;base.rb</code> in
                <code><strong>visit_children</strong></code>
            </li>

            <li class="code system">
              
              <ol start="46"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # This method is run when `visit_*` methods `yield`,
</code></li>
                
                <li class="pre-context-line"><code>    # and its return value is returned from the `yield`.
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @param parent [Tree::Node] The parent node of the children to visit.
</code></li>
                
                <li class="pre-context-line"><code>    # @return [Array&lt;Object&gt;] The return values of the `visit_*` methods for the children.
</code></li>
                
                <li class="pre-context-line"><code>    def visit_children(parent)
</code></li>
                
              </ol>
              

              <ol start="53" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>      parent.children.map {|c| visit(c)}</code></li>
              </ol>

              
              <ol start="54" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    NODE_NAME_RE = &#x2F;.*::(.*?)Node$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Returns the name of a node as used in the `visit_*` method.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # @param [Tree::Node] node The node.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>block in visit_children</strong></code>
            </li>

            <li class="code system">
              
              <ol start="102"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>    e.modify_backtrace(:filename =&gt; node.filename, :line =&gt; node.line)
</code></li>
                
                <li class="pre-context-line"><code>    raise e
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  # Keeps track of the current environment.
</code></li>
                
                <li class="pre-context-line"><code>  def visit_children(parent)
</code></li>
                
                <li class="pre-context-line"><code>    with_environment Sass::Environment.new(@environment, parent.options) do
</code></li>
                
              </ol>
              

              <ol start="109" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>      parent.children = super.flatten</code></li>
              </ol>

              
              <ol start="110" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>      parent
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # Runs a block of code with the current environment replaced with the given one.
</code></li>
                
                <li class="post-context-line"><code>  #
</code></li>
                
                <li class="post-context-line"><code>  # @param env [Sass::Environment] The new environment for the duration of the block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>with_environment</strong></code>
            </li>

            <li class="code system">
              
              <ol start="114"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>  # Runs a block of code with the current environment replaced with the given one.
</code></li>
                
                <li class="pre-context-line"><code>  #
</code></li>
                
                <li class="pre-context-line"><code>  # @param env [Sass::Environment] The new environment for the duration of the block.
</code></li>
                
                <li class="pre-context-line"><code>  # @yield A block in which the environment is set to `env`.
</code></li>
                
                <li class="pre-context-line"><code>  # @return [Object] The return value of the block.
</code></li>
                
                <li class="pre-context-line"><code>  def with_environment(env)
</code></li>
                
                <li class="pre-context-line"><code>    old_env, @environment = @environment, env
</code></li>
                
              </ol>
              

              <ol start="121" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>    yield</code></li>
              </ol>

              
              <ol start="122" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>  ensure
</code></li>
                
                <li class="post-context-line"><code>    @environment = old_env
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # Sets the options on the environment if this is the top-level root.
</code></li>
                
                <li class="post-context-line"><code>  def visit_root(node)
</code></li>
                
                <li class="post-context-line"><code>    yield
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>visit_children</strong></code>
            </li>

            <li class="code system">
              
              <ol start="101"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>  rescue Sass::SyntaxError =&gt; e
</code></li>
                
                <li class="pre-context-line"><code>    e.modify_backtrace(:filename =&gt; node.filename, :line =&gt; node.line)
</code></li>
                
                <li class="pre-context-line"><code>    raise e
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  # Keeps track of the current environment.
</code></li>
                
                <li class="pre-context-line"><code>  def visit_children(parent)
</code></li>
                
              </ol>
              

              <ol start="108" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>    with_environment Sass::Environment.new(@environment, parent.options) do</code></li>
              </ol>

              
              <ol start="109" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>      parent.children = super.flatten
</code></li>
                
                <li class="post-context-line"><code>      parent
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # Runs a block of code with the current environment replaced with the given one.
</code></li>
                
                <li class="post-context-line"><code>  #
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;base.rb</code> in
                <code><strong>block in visit</strong></code>
            </li>

            <li class="code system">
              
              <ol start="30"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>    # This can be overridden by subclasses that need to do something for each node.
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @param node [Tree::Node] The node to visit.
</code></li>
                
                <li class="pre-context-line"><code>    # @return [Object] The return value of the `visit_*` method for this node.
</code></li>
                
                <li class="pre-context-line"><code>    def visit(node)
</code></li>
                
                <li class="pre-context-line"><code>      method = &quot;visit_#{node_name node}&quot;
</code></li>
                
                <li class="pre-context-line"><code>      if self.respond_to?(method, true)
</code></li>
                
              </ol>
              

              <ol start="37" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>        self.send(method, node) {visit_children(node)}</code></li>
              </ol>

              
              <ol start="38" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        visit_children(node)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Visit the child nodes for a given node.
</code></li>
                
                <li class="post-context-line"><code>    # This can be overridden by subclasses that need to do something
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>visit_root</strong></code>
            </li>

            <li class="code system">
              
              <ol start="121"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>    yield
</code></li>
                
                <li class="pre-context-line"><code>  ensure
</code></li>
                
                <li class="pre-context-line"><code>    @environment = old_env
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  # Sets the options on the environment if this is the top-level root.
</code></li>
                
                <li class="pre-context-line"><code>  def visit_root(node)
</code></li>
                
              </ol>
              

              <ol start="128" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>    yield</code></li>
              </ol>

              
              <ol start="129" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>  rescue Sass::SyntaxError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>    e.sass_template ||= node.template
</code></li>
                
                <li class="post-context-line"><code>    raise e
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # Removes this node from the tree if it&#x27;s a silent comment.
</code></li>
                
                <li class="post-context-line"><code>  def visit_comment(node)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;base.rb</code> in
                <code><strong>visit</strong></code>
            </li>

            <li class="code system">
              
              <ol start="30"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>    # This can be overridden by subclasses that need to do something for each node.
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @param node [Tree::Node] The node to visit.
</code></li>
                
                <li class="pre-context-line"><code>    # @return [Object] The return value of the `visit_*` method for this node.
</code></li>
                
                <li class="pre-context-line"><code>    def visit(node)
</code></li>
                
                <li class="pre-context-line"><code>      method = &quot;visit_#{node_name node}&quot;
</code></li>
                
                <li class="pre-context-line"><code>      if self.respond_to?(method, true)
</code></li>
                
              </ol>
              

              <ol start="37" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>        self.send(method, node) {visit_children(node)}</code></li>
              </ol>

              
              <ol start="38" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        visit_children(node)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Visit the child nodes for a given node.
</code></li>
                
                <li class="post-context-line"><code>    # This can be overridden by subclasses that need to do something
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>visit</strong></code>
            </li>

            <li class="code system">
              
              <ol start="93"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>    @environment = env
</code></li>
                
                <li class="pre-context-line"><code>    # Stack trace information, including mixin includes and imports.
</code></li>
                
                <li class="pre-context-line"><code>    @stack = []
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  # If an exception is raised, this adds proper metadata to the backtrace.
</code></li>
                
                <li class="pre-context-line"><code>  def visit(node)
</code></li>
                
              </ol>
              

              <ol start="100" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>    super(node.dup)</code></li>
              </ol>

              
              <ol start="101" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>  rescue Sass::SyntaxError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>    e.modify_backtrace(:filename =&gt; node.filename, :line =&gt; node.line)
</code></li>
                
                <li class="post-context-line"><code>    raise e
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # Keeps track of the current environment.
</code></li>
                
                <li class="post-context-line"><code>  def visit_children(parent)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;visitors&#x2F;perform.rb</code> in
                <code><strong>visit</strong></code>
            </li>

            <li class="code system">
              
              <ol start="1"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code># A visitor for converting a dynamic Sass tree into a static Sass tree.
</code></li>
                
                <li class="pre-context-line"><code>class Sass::Tree::Visitors::Perform &lt; Sass::Tree::Visitors::Base
</code></li>
                
                <li class="pre-context-line"><code>  # @param root [Tree::Node] The root node of the tree to visit.
</code></li>
                
                <li class="pre-context-line"><code>  # @param environment [Sass::Environment] The lexical environment.
</code></li>
                
                <li class="pre-context-line"><code>  # @return [Tree::Node] The resulting tree of static nodes.
</code></li>
                
                <li class="pre-context-line"><code>  def self.visit(root, environment = Sass::Environment.new)
</code></li>
                
              </ol>
              

              <ol start="7" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>    new(environment).send(:visit, root)</code></li>
              </ol>

              
              <ol start="8" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  # @api private
</code></li>
                
                <li class="post-context-line"><code>  def self.perform_arguments(callable, args, keywords, splat)
</code></li>
                
                <li class="post-context-line"><code>    desc = &quot;#{callable.type.capitalize} #{callable.name}&quot;
</code></li>
                
                <li class="post-context-line"><code>    downcase_desc = &quot;#{callable.type} #{callable.name}&quot;
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;tree&#x2F;root_node.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code system">
              
              <ol start="13"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>        @template = template
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Runs the dynamic Sass code *and* computes the CSS for the tree.
</code></li>
                
                <li class="pre-context-line"><code>      # @see #to_s
</code></li>
                
                <li class="pre-context-line"><code>      def render
</code></li>
                
                <li class="pre-context-line"><code>        Visitors::CheckNesting.visit(self)
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>        result = Visitors::Perform.visit(self)</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>        Visitors::CheckNesting.visit(result) # Check again to validate mixins
</code></li>
                
                <li class="post-context-line"><code>        result, extends = Visitors::Cssize.visit(result)
</code></li>
                
                <li class="post-context-line"><code>        Visitors::Extend.visit(result, extends)
</code></li>
                
                <li class="post-context-line"><code>        result.to_s
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;engine.rb</code> in
                <code><strong>_render</strong></code>
            </li>

            <li class="code system">
              
              <ol start="308"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>        n.imported_file._dependencies(seen, engines)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    private
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def _render
</code></li>
                
              </ol>
              

              <ol start="315" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>      rendered = _to_tree.render</code></li>
              </ol>

              
              <ol start="316" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>      return rendered if ruby1_8?
</code></li>
                
                <li class="post-context-line"><code>      begin
</code></li>
                
                <li class="post-context-line"><code>        # Try to convert the result to the original encoding,
</code></li>
                
                <li class="post-context-line"><code>        # but if that doesn&#x27;t work fall back on UTF-8
</code></li>
                
                <li class="post-context-line"><code>        rendered = rendered.encode(source_encoding)
</code></li>
                
                <li class="post-context-line"><code>      rescue EncodingError
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sass-3.2.12&#x2F;lib&#x2F;sass&#x2F;engine.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code system">
              
              <ol start="255"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # @return [String] The CSS
</code></li>
                
                <li class="pre-context-line"><code>    # @raise [Sass::SyntaxError] if there&#x27;s an error in the document
</code></li>
                
                <li class="pre-context-line"><code>    # @raise [Encoding::UndefinedConversionError] if the source encoding
</code></li>
                
                <li class="pre-context-line"><code>    #   cannot be converted to UTF-8
</code></li>
                
                <li class="pre-context-line"><code>    # @raise [ArgumentError] if the document uses an unknown encoding with `@charset`
</code></li>
                
                <li class="pre-context-line"><code>    def render
</code></li>
                
              </ol>
              

              <ol start="262" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>      return _render unless @options[:quiet]</code></li>
              </ol>

              
              <ol start="263" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>      Sass::Util.silence_sass_warnings {_render}
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    alias_method :to_css, :render
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Parses the document into its parse tree. Memoized.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # @return [Sass::Tree::Node] The root of the parse tree.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;tilt-1.4.1&#x2F;lib&#x2F;tilt&#x2F;css.rb</code> in
                <code><strong>evaluate</strong></code>
            </li>

            <li class="code system">
              
              <ol start="17"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def prepare
</code></li>
                
                <li class="pre-context-line"><code>      @engine = ::Sass::Engine.new(data, sass_options)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def evaluate(scope, locals, &amp;block)
</code></li>
                
              </ol>
              

              <ol start="24" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>      @output ||= @engine.render</code></li>
              </ol>

              
              <ol start="25" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def allows_script?
</code></li>
                
                <li class="post-context-line"><code>      false
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  private
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;tilt-1.4.1&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code system">
              
              <ol start="96"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      data
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="pre-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="pre-context-line"><code>    # +yield+.
</code></li>
                
                <li class="pre-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              

              <ol start="103" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      evaluate scope, locals || {}, &amp;block</code></li>
              </ol>

              
              <ol start="104" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # The basename of the template file.
</code></li>
                
                <li class="post-context-line"><code>    def basename(suffix=&#x27;&#x27;)
</code></li>
                
                <li class="post-context-line"><code>      File.basename(file, suffix) if file
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="791"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>      options[:default_encoding] ||= settings.default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # compile and render template
</code></li>
                
                <li class="pre-context-line"><code>      begin
</code></li>
                
                <li class="pre-context-line"><code>        layout_was      = @default_layout
</code></li>
                
                <li class="pre-context-line"><code>        @default_layout = false
</code></li>
                
                <li class="pre-context-line"><code>        template        = compile_template(engine, data, options, views)
</code></li>
                
              </ol>
              

              <ol start="798" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>        output          = template.render(scope, locals, &amp;block)</code></li>
              </ol>

              
              <ol start="799" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        @default_layout = layout_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # render layout
</code></li>
                
                <li class="post-context-line"><code>      if layout
</code></li>
                
                <li class="post-context-line"><code>        options = options.merge(:views =&gt; views, :layout =&gt; false, :eat_errors =&gt; eat_errors, :scope =&gt; scope)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;class_methods.rb</code> in
                <code><strong>block (4 levels) in add_individual_routes!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="83"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            else
</code></li>
                
                <li class="pre-context-line"><code>              # Dynamic file
</code></li>
                
                <li class="pre-context-line"><code>              not_found unless AssetPack.tilt_formats[format] == fmt
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>              @template_cache.fetch(fn) {
</code></li>
                
                <li class="pre-context-line"><code>                settings.assets.fetch_dynamic_asset(fn) {
</code></li>
                
              </ol>
              

              <ol start="90" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>                  out = render format.to_sym, File.read(fn), :filename =&gt; fn</code></li>
              </ol>

              
              <ol start="91" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>                  out = asset_filter_css(out)  if fmt == &#x27;css&#x27;
</code></li>
                
                <li class="post-context-line"><code>                  out
</code></li>
                
                <li class="post-context-line"><code>                }
</code></li>
                
                <li class="post-context-line"><code>              }
</code></li>
                
                <li class="post-context-line"><code>            end
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;options.rb</code> in
                <code><strong>fetch_dynamic_asset</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="293"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>        Hash[*paths.flatten]
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Fetches the contents of a dynamic asset. If `cache_dynamic_assets` is set,
</code></li>
                
                <li class="pre-context-line"><code>      # check file mtime and potentially return contents from cache instead of re-compiling.
</code></li>
                
                <li class="pre-context-line"><code>      # Yields to a block to compile &amp; render the asset.
</code></li>
                
                <li class="pre-context-line"><code>      def fetch_dynamic_asset(path)
</code></li>
                
              </ol>
              

              <ol start="300" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>        return yield unless cache_dynamic_assets</code></li>
              </ol>

              
              <ol start="301" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        mtime = File.mtime(path)
</code></li>
                
                <li class="post-context-line"><code>        cached_mtime, contents = @dynamic_asset_cache[path]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if cached_mtime.nil? || mtime != cached_mtime
</code></li>
                
                <li class="post-context-line"><code>          @dynamic_asset_cache[path] = [mtime, yield]
</code></li>
                
                <li class="post-context-line"><code>          @dynamic_asset_cache[path][1]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;class_methods.rb</code> in
                <code><strong>block (3 levels) in add_individual_routes!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="82"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>                send_file fn
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            else
</code></li>
                
                <li class="pre-context-line"><code>              # Dynamic file
</code></li>
                
                <li class="pre-context-line"><code>              not_found unless AssetPack.tilt_formats[format] == fmt
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>              @template_cache.fetch(fn) {
</code></li>
                
              </ol>
              

              <ol start="89" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>                settings.assets.fetch_dynamic_asset(fn) {</code></li>
              </ol>

              
              <ol start="90" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>                  out = render format.to_sym, File.read(fn), :filename =&gt; fn
</code></li>
                
                <li class="post-context-line"><code>                  out = asset_filter_css(out)  if fmt == &#x27;css&#x27;
</code></li>
                
                <li class="post-context-line"><code>                  out
</code></li>
                
                <li class="post-context-line"><code>                }
</code></li>
                
                <li class="post-context-line"><code>              }
</code></li>
                
                <li class="post-context-line"><code>            end
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;tilt-1.4.1&#x2F;lib&#x2F;tilt.rb</code> in
                <code><strong>fetch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="120"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>  # Subsequent invocations return the already loaded template object.
</code></li>
                
                <li class="pre-context-line"><code>  class Cache
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      @cache = {}
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def fetch(*key)
</code></li>
                
              </ol>
              

              <ol start="127" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>      @cache[key] ||= yield</code></li>
              </ol>

              
              <ol start="128" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def clear
</code></li>
                
                <li class="post-context-line"><code>      @cache = {}
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;class_methods.rb</code> in
                <code><strong>block (2 levels) in add_individual_routes!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="81"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>                # It&#x27;s a raw file, just send it
</code></li>
                
                <li class="pre-context-line"><code>                send_file fn
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            else
</code></li>
                
                <li class="pre-context-line"><code>              # Dynamic file
</code></li>
                
                <li class="pre-context-line"><code>              not_found unless AssetPack.tilt_formats[format] == fmt
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="88" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>              @template_cache.fetch(fn) {</code></li>
              </ol>

              
              <ol start="89" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>                settings.assets.fetch_dynamic_asset(fn) {
</code></li>
                
                <li class="post-context-line"><code>                  out = render format.to_sym, File.read(fn), :filename =&gt; fn
</code></li>
                
                <li class="post-context-line"><code>                  out = asset_filter_css(out)  if fmt == &#x27;css&#x27;
</code></li>
                
                <li class="post-context-line"><code>                  out
</code></li>
                
                <li class="post-context-line"><code>                }
</code></li>
                
                <li class="post-context-line"><code>              }
</code></li>
                
                <li class="post-context-line"><code>            end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1533"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>        options.each_pair { |option, args| send(option, *args) }
</code></li>
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        wrapper                 = block.arity != 0 ?
</code></li>
                
              </ol>
              

              <ol start="1540" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :</code></li>
              </ol>

              
              <ol start="1541" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>          proc { |a,p| unbound_method.bind(a).call }
</code></li>
                
                <li class="post-context-line"><code>        wrapper.instance_variable_set(:@route_name, method_name)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        [ pattern, keys, conditions, wrapper ]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1533"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>        options.each_pair { |option, args| send(option, *args) }
</code></li>
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        wrapper                 = block.arity != 0 ?
</code></li>
                
              </ol>
              

              <ol start="1540" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :</code></li>
              </ol>

              
              <ol start="1541" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>          proc { |a,p| unbound_method.bind(a).call }
</code></li>
                
                <li class="post-context-line"><code>        wrapper.instance_variable_set(:@route_name, method_name)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        [ pattern, keys, conditions, wrapper ]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="943"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="950" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="951" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="943"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="950" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="951" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="959"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="966" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="967" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="943"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="950" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="951" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="980"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="987" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>        block ? block[self, values] : yield(self, values)</code></li>
              </ol>

              
              <ol start="988" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
                <li class="post-context-line"><code>    # implementation is to forward the request downstream when running
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="978"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>      values += match.captures.to_a.map { |v| force_encoding URI.unescape(v) if v }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="985" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>      catch(:pass) do</code></li>
              </ol>

              
              <ol start="986" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="978"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>      values += match.captures.to_a.map { |v| force_encoding URI.unescape(v) if v }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="985" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>      catch(:pass) do</code></li>
              </ol>

              
              <ol start="986" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="941"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="948" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="949" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="940"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="947" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="948" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="940"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="947" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="948" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1052"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      invoke do
</code></li>
                
                <li class="pre-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>        filter! :before
</code></li>
                
              </ol>
              

              <ol start="1059" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>        route!</code></li>
              </ol>

              
              <ol start="1060" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      invoke { handle_exception!(boom) }
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      begin
</code></li>
                
                <li class="post-context-line"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>      rescue ::Exception =&gt; boom
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1034"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1041" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1042" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1034"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1041" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1042" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1034"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1041" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1042" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1049"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>        body res
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      nil # avoid double setting the same response tuple twice
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
              </ol>
              

              <ol start="1056" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>      invoke do</code></li>
              </ol>

              
              <ol start="1057" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="post-context-line"><code>        filter! :before
</code></li>
                
                <li class="post-context-line"><code>        route!
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      invoke { handle_exception!(boom) }
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="875"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="882" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="883" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1034"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1041" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1042" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1034"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1041" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1042" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1034"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1041" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1042" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="875"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="882" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="883" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="863"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="870" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="871" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="post-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="post-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Options:
</code></li>
                
                <li class="pre-context-line"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)
</code></li>
                
                <li class="pre-context-line"><code>    class XSSHeader &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers
</code></li>
                
                <li class="post-context-line"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]
</code></li>
                
                <li class="post-context-line"><code>        [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to?(:encoding)
</code></li>
                
                <li class="post-context-line"><code>          # Ruby 1.9+ M17N
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      alias react deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        request               = Request.new(env)
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if has_vector? request, headers
</code></li>
                
                <li class="post-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="post-context-line"><code>          react(env) or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="43"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          instrument env
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="50" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="51" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="43"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          instrument env
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="50" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="51" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="24"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>          frame_options = options[:frame_options]
</code></li>
                
                <li class="pre-context-line"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str
</code></li>
                
                <li class="pre-context-line"><code>          frame_options.to_str
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="31" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>        status, headers, body        = @app.call(env)</code></li>
              </ol>

              
              <ol start="32" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
                <li class="post-context-line"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers
</code></li>
                
                <li class="post-context-line"><code>        [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-1.4.5&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>  class NullLogger
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = self
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def info(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def debug(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def warn(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def error(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def fatal(progname = nil, &amp;block); end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-1.4.5&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-61"
                  onclick="toggle(61);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Head
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="61"
                  onclick="toggle(61);">
                <li class="context-line" id="context-61"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-61" onclick="toggle(61);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;
</code></li>
                
                <li class="post-context-line"><code>      body.close if body.respond_to? :close
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, []]
</code></li>
                
                <li class="post-context-line"><code>    else
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;showexceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-62"
                  onclick="toggle(62);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="62"
                  onclick="toggle(62);">
                <li class="context-line" id="context-62"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-62" onclick="toggle(62);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="168"
                  class="pre-context" id="pre-63"
                  onclick="toggle(63);">
                
                <li class="pre-context-line"><code>  # Some Rack handlers (Thin, Rainbows!) implement an extended body object protocol, however,
</code></li>
                
                <li class="pre-context-line"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.
</code></li>
                
                <li class="pre-context-line"><code>  # This middleware will detect an extended body object and will make sure it reaches the
</code></li>
                
                <li class="pre-context-line"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will
</code></li>
                
                <li class="pre-context-line"><code>  # still be able to run.
</code></li>
                
                <li class="pre-context-line"><code>  class ExtendedRack &lt; Struct.new(:app)
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="175" class="context" id="63"
                  onclick="toggle(63);">
                <li class="context-line" id="context-63"><code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code></li>
              </ol>

              
              <ol start="176" class="post-context"
                  id="post-63" onclick="toggle(63);">
                
                <li class="post-context-line"><code>      return result unless callback and async?(*result)
</code></li>
                
                <li class="post-context-line"><code>      after_response { callback.call result }
</code></li>
                
                <li class="post-context-line"><code>      setup_close(env, *result)
</code></li>
                
                <li class="post-context-line"><code>      throw :async
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1942"
                  class="pre-context" id="pre-64"
                  onclick="toggle(64);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def helpers
</code></li>
                
                <li class="pre-context-line"><code>      @instance
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="1949" class="context" id="64"
                  onclick="toggle(64);">
                <li class="context-line" id="context-64"><code>      @stack.call(env)</code></li>
              </ol>

              
              <ol start="1950" class="post-context"
                  id="post-64" onclick="toggle(64);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def inspect
</code></li>
                
                <li class="post-context-line"><code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1442"
                  class="pre-context" id="pre-65"
                  onclick="toggle(65);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run app
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1449" class="context" id="65"
                  onclick="toggle(65);">
                <li class="context-line" id="context-65"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1450" class="post-context"
                  id="post-65" onclick="toggle(65);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
</code></li>
                
                <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
</code></li>
                
                <li class="post-context-line"><code>      def caller_files
</code></li>
                
                <li class="post-context-line"><code>        cleaned_caller(1).flatten
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1719"
                  class="pre-context" id="pre-66"
                  onclick="toggle(66);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @@mutex = Mutex.new
</code></li>
                
                <li class="pre-context-line"><code>      def synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if lock?
</code></li>
                
                <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="1726" class="context" id="66"
                  onclick="toggle(66);">
                <li class="context-line" id="context-66"><code>          yield</code></li>
              </ol>

              
              <ol start="1727" class="post-context"
                  id="post-66" onclick="toggle(66);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # used for deprecation warnings
</code></li>
                
                <li class="post-context-line"><code>      def warn(message)
</code></li>
                
                <li class="post-context-line"><code>        super message + &quot;\n\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1442"
                  class="pre-context" id="pre-67"
                  onclick="toggle(67);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run app
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1449" class="context" id="67"
                  onclick="toggle(67);">
                <li class="context-line" id="context-67"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1450" class="post-context"
                  id="post-67" onclick="toggle(67);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
</code></li>
                
                <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
</code></li>
                
                <li class="post-context-line"><code>      def caller_files
</code></li>
                
                <li class="post-context-line"><code>        cleaned_caller(1).flatten
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-test-0.6.2&#x2F;lib&#x2F;rack&#x2F;mock_session.rb</code> in
                <code><strong>request</strong></code>
            </li>

            <li class="code system">
              
              <ol start="23"
                  class="pre-context" id="pre-68"
                  onclick="toggle(68);">
                
                <li class="pre-context-line"><code>    def set_cookie(cookie, uri = nil)
</code></li>
                
                <li class="pre-context-line"><code>      cookie_jar.merge(cookie, uri)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def request(uri, env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
</code></li>
                
                <li class="pre-context-line"><code>      @last_request = Rack::Request.new(env)
</code></li>
                
              </ol>
              

              <ol start="30" class="context" id="68"
                  onclick="toggle(68);">
                <li class="context-line" id="context-68"><code>      status, headers, body = @app.call(@last_request.env)</code></li>
              </ol>

              
              <ol start="31" class="post-context"
                  id="post-68" onclick="toggle(68);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
</code></li>
                
                <li class="post-context-line"><code>      body.close if body.respond_to?(:close)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      cookie_jar.merge(last_response.headers[&quot;Set-Cookie&quot;], uri)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      @after_request.each { |hook| hook.call }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-test-0.6.2&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                <code><strong>process_request</strong></code>
            </li>

            <li class="code system">
              
              <ol start="223"
                  class="pre-context" id="pre-69"
                  onclick="toggle(69);">
                
                <li class="pre-context-line"><code>        Rack::MockRequest.env_for(uri.to_s, env)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def process_request(uri, env)
</code></li>
                
                <li class="pre-context-line"><code>        uri = URI.parse(uri)
</code></li>
                
                <li class="pre-context-line"><code>        uri.host ||= @default_host
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="230" class="context" id="69"
                  onclick="toggle(69);">
                <li class="context-line" id="context-69"><code>        @rack_mock_session.request(uri, env)</code></li>
              </ol>

              
              <ol start="231" class="post-context"
                  id="post-69" onclick="toggle(69);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if retry_with_digest_auth?(env)
</code></li>
                
                <li class="post-context-line"><code>          auth_env = env.merge({
</code></li>
                
                <li class="post-context-line"><code>            &quot;HTTP_AUTHORIZATION&quot;          =&gt; digest_auth_header,
</code></li>
                
                <li class="post-context-line"><code>            &quot;rack-test.digest_auth_retry&quot; =&gt; true
</code></li>
                
                <li class="post-context-line"><code>          })
</code></li>
                
                <li class="post-context-line"><code>          auth_env.delete(&#x27;rack.request&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;rack-test-0.6.2&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                <code><strong>get</strong></code>
            </li>

            <li class="code system">
              
              <ol start="50"
                  class="pre-context" id="pre-70"
                  onclick="toggle(70);">
                
                <li class="pre-context-line"><code>      # the app&#x27;s response in #last_response. Yield #last_response to a block
</code></li>
                
                <li class="pre-context-line"><code>      # if given.
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # Example:
</code></li>
                
                <li class="pre-context-line"><code>      #   get &quot;&#x2F;&quot;
</code></li>
                
                <li class="pre-context-line"><code>      def get(uri, params = {}, env = {}, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        env = env_for(uri, env.merge(:method =&gt; &quot;GET&quot;, :params =&gt; params))
</code></li>
                
              </ol>
              

              <ol start="57" class="context" id="70"
                  onclick="toggle(70);">
                <li class="context-line" id="context-70"><code>        process_request(uri, env, &amp;block)</code></li>
              </ol>

              
              <ol start="58" class="post-context"
                  id="post-70" onclick="toggle(70);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Issue a POST request for the given URI. See #get
</code></li>
                
                <li class="post-context-line"><code>      #
</code></li>
                
                <li class="post-context-line"><code>      # Example:
</code></li>
                
                <li class="post-context-line"><code>      #   post &quot;&#x2F;signup&quot;, &quot;name&quot; =&gt; &quot;Bryan&quot;
</code></li>
                
                <li class="post-context-line"><code>      def post(uri, params = {}, env = {}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;builder.rb</code> in
                <code><strong>build_get</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="6"
                  class="pre-context" id="pre-71"
                  onclick="toggle(71);">
                
                <li class="pre-context-line"><code>        files.each { |path, local| build_file!(path, local, &amp;blk) }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      private
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def build_get(path, &amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>        @session ||= Rack::Test::Session.new app
</code></li>
                
              </ol>
              

              <ol start="13" class="context" id="71"
                  onclick="toggle(71);">
                <li class="context-line" id="context-71"><code>        @session.get(path)</code></li>
              </ol>

              
              <ol start="14" class="post-context"
                  id="post-71" onclick="toggle(71);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def build_package!(pack, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        response = build_get(pack.path)
</code></li>
                
                <li class="post-context-line"><code>        build_write(pack.path, response, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        build_write(pack.production_path, response, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;builder.rb</code> in
                <code><strong>build_file!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="16"
                  class="pre-context" id="pre-72"
                  onclick="toggle(72);">
                
                <li class="pre-context-line"><code>      def build_package!(pack, &amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>        response = build_get(pack.path)
</code></li>
                
                <li class="pre-context-line"><code>        build_write(pack.path, response, &amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>        build_write(pack.production_path, response, &amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def build_file!(path, local, &amp;blk)
</code></li>
                
              </ol>
              

              <ol start="23" class="context" id="72"
                  onclick="toggle(72);">
                <li class="context-line" id="context-72"><code>        response = build_get(path)</code></li>
              </ol>

              
              <ol start="24" class="post-context"
                  id="post-72" onclick="toggle(72);">
                
                <li class="post-context-line"><code>        build_write(path, response, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        build_write(BusterHelpers.add_cache_buster(path, local), response, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def build_write(path, response, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        require &#x27;fileutils&#x27;
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;builder.rb</code> in
                <code><strong>block in build!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1"
                  class="pre-context" id="pre-73"
                  onclick="toggle(73);">
                
                <li class="pre-context-line"><code>module Sinatra
</code></li>
                
                <li class="pre-context-line"><code>  module AssetPack
</code></li>
                
                <li class="pre-context-line"><code>    module Builder
</code></li>
                
                <li class="pre-context-line"><code>      def build!(&amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>        packages.each { |_, pack| build_package!(pack, &amp;blk) }
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="73"
                  onclick="toggle(73);">
                <li class="context-line" id="context-73"><code>        files.each { |path, local| build_file!(path, local, &amp;blk) }</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-73" onclick="toggle(73);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def build_get(path, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        @session ||= Rack::Test::Session.new app
</code></li>
                
                <li class="post-context-line"><code>        @session.get(path)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;builder.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1"
                  class="pre-context" id="pre-74"
                  onclick="toggle(74);">
                
                <li class="pre-context-line"><code>module Sinatra
</code></li>
                
                <li class="pre-context-line"><code>  module AssetPack
</code></li>
                
                <li class="pre-context-line"><code>    module Builder
</code></li>
                
                <li class="pre-context-line"><code>      def build!(&amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>        packages.each { |_, pack| build_package!(pack, &amp;blk) }
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="74"
                  onclick="toggle(74);">
                <li class="context-line" id="context-74"><code>        files.each { |path, local| build_file!(path, local, &amp;blk) }</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-74" onclick="toggle(74);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def build_get(path, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        @session ||= Rack::Test::Session.new app
</code></li>
                
                <li class="post-context-line"><code>        @session.get(path)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;builder.rb</code> in
                <code><strong>build!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1"
                  class="pre-context" id="pre-75"
                  onclick="toggle(75);">
                
                <li class="pre-context-line"><code>module Sinatra
</code></li>
                
                <li class="pre-context-line"><code>  module AssetPack
</code></li>
                
                <li class="pre-context-line"><code>    module Builder
</code></li>
                
                <li class="pre-context-line"><code>      def build!(&amp;blk)
</code></li>
                
                <li class="pre-context-line"><code>        packages.each { |_, pack| build_package!(pack, &amp;blk) }
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="75"
                  onclick="toggle(75);">
                <li class="context-line" id="context-75"><code>        files.each { |path, local| build_file!(path, local, &amp;blk) }</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-75" onclick="toggle(75);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def build_get(path, &amp;blk)
</code></li>
                
                <li class="post-context-line"><code>        @session ||= Rack::Test::Session.new app
</code></li>
                
                <li class="post-context-line"><code>        @session.get(path)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;rake.rb</code> in
                <code><strong>block (2 levels) in &lt;top (required)&gt;</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="18"
                  class="pre-context" id="pre-76"
                  onclick="toggle(76);">
                
                <li class="pre-context-line"><code>  require File.expand_path(APP_FILE, Dir.pwd)
</code></li>
                
                <li class="pre-context-line"><code>  class_from_string(APP_CLASS)
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>namespace :assetpack do
</code></li>
                
                <li class="pre-context-line"><code>  desc &quot;Build assets&quot;
</code></li>
                
                <li class="pre-context-line"><code>  task :build do
</code></li>
                
              </ol>
              

              <ol start="25" class="context" id="76"
                  onclick="toggle(76);">
                <li class="context-line" id="context-76"><code>    app.assets.build! { |file|</code></li>
              </ol>

              
              <ol start="26" class="post-context"
                  id="post-76" onclick="toggle(76);">
                
                <li class="post-context-line"><code>      puts &quot;+ #{file.gsub(Dir.pwd, &#x27;&#x27;)}&quot;
</code></li>
                
                <li class="post-context-line"><code>    }
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code app">
              
              <ol start="229"
                  class="pre-context" id="pre-77"
                  onclick="toggle(77);">
                
                <li class="pre-context-line"><code>      application.trace &quot;** Execute #{name}&quot; if application.options.trace
</code></li>
                
                <li class="pre-context-line"><code>      application.enhance_with_matching_rule(name) if @actions.empty?
</code></li>
                
                <li class="pre-context-line"><code>      @actions.each do |act|
</code></li>
                
                <li class="pre-context-line"><code>        case act.arity
</code></li>
                
                <li class="pre-context-line"><code>        when 1
</code></li>
                
                <li class="pre-context-line"><code>          act.call(self)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="236" class="context" id="77"
                  onclick="toggle(77);">
                <li class="context-line" id="context-77"><code>          act.call(self, args)</code></li>
              </ol>

              
              <ol start="237" class="post-context"
                  id="post-77" onclick="toggle(77);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Is this task needed?
</code></li>
                
                <li class="post-context-line"><code>    def needed?
</code></li>
                
                <li class="post-context-line"><code>      true
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>block in execute</strong></code>
            </li>

            <li class="code app">
              
              <ol start="229"
                  class="pre-context" id="pre-78"
                  onclick="toggle(78);">
                
                <li class="pre-context-line"><code>      application.trace &quot;** Execute #{name}&quot; if application.options.trace
</code></li>
                
                <li class="pre-context-line"><code>      application.enhance_with_matching_rule(name) if @actions.empty?
</code></li>
                
                <li class="pre-context-line"><code>      @actions.each do |act|
</code></li>
                
                <li class="pre-context-line"><code>        case act.arity
</code></li>
                
                <li class="pre-context-line"><code>        when 1
</code></li>
                
                <li class="pre-context-line"><code>          act.call(self)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="236" class="context" id="78"
                  onclick="toggle(78);">
                <li class="context-line" id="context-78"><code>          act.call(self, args)</code></li>
              </ol>

              
              <ol start="237" class="post-context"
                  id="post-78" onclick="toggle(78);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Is this task needed?
</code></li>
                
                <li class="post-context-line"><code>    def needed?
</code></li>
                
                <li class="post-context-line"><code>      true
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code app">
              
              <ol start="224"
                  class="pre-context" id="pre-79"
                  onclick="toggle(79);">
                
                <li class="pre-context-line"><code>      args ||= EMPTY_TASK_ARGS
</code></li>
                
                <li class="pre-context-line"><code>      if application.options.dryrun
</code></li>
                
                <li class="pre-context-line"><code>        application.trace &quot;** Execute (dry run) #{name}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        return
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      application.trace &quot;** Execute #{name}&quot; if application.options.trace
</code></li>
                
                <li class="pre-context-line"><code>      application.enhance_with_matching_rule(name) if @actions.empty?
</code></li>
                
              </ol>
              

              <ol start="231" class="context" id="79"
                  onclick="toggle(79);">
                <li class="context-line" id="context-79"><code>      @actions.each do |act|</code></li>
              </ol>

              
              <ol start="232" class="post-context"
                  id="post-79" onclick="toggle(79);">
                
                <li class="post-context-line"><code>        case act.arity
</code></li>
                
                <li class="post-context-line"><code>        when 1
</code></li>
                
                <li class="post-context-line"><code>          act.call(self)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          act.call(self, args)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>execute</strong></code>
            </li>

            <li class="code app">
              
              <ol start="224"
                  class="pre-context" id="pre-80"
                  onclick="toggle(80);">
                
                <li class="pre-context-line"><code>      args ||= EMPTY_TASK_ARGS
</code></li>
                
                <li class="pre-context-line"><code>      if application.options.dryrun
</code></li>
                
                <li class="pre-context-line"><code>        application.trace &quot;** Execute (dry run) #{name}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        return
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      application.trace &quot;** Execute #{name}&quot; if application.options.trace
</code></li>
                
                <li class="pre-context-line"><code>      application.enhance_with_matching_rule(name) if @actions.empty?
</code></li>
                
              </ol>
              

              <ol start="231" class="context" id="80"
                  onclick="toggle(80);">
                <li class="context-line" id="context-80"><code>      @actions.each do |act|</code></li>
              </ol>

              
              <ol start="232" class="post-context"
                  id="post-80" onclick="toggle(80);">
                
                <li class="post-context-line"><code>        case act.arity
</code></li>
                
                <li class="post-context-line"><code>        when 1
</code></li>
                
                <li class="post-context-line"><code>          act.call(self)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          act.call(self, args)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>block in invoke_with_call_chain</strong></code>
            </li>

            <li class="code app">
              
              <ol start="168"
                  class="pre-context" id="pre-81"
                  onclick="toggle(81);">
                
                <li class="pre-context-line"><code>      @lock.synchronize do
</code></li>
                
                <li class="pre-context-line"><code>        if application.options.trace
</code></li>
                
                <li class="pre-context-line"><code>          application.trace &quot;** Invoke #{name} #{format_trace_flags}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        return if @already_invoked
</code></li>
                
                <li class="pre-context-line"><code>        @already_invoked = true
</code></li>
                
                <li class="pre-context-line"><code>        invoke_prerequisites(task_args, new_chain)
</code></li>
                
              </ol>
              

              <ol start="175" class="context" id="81"
                  onclick="toggle(81);">
                <li class="context-line" id="context-81"><code>        execute(task_args) if needed?</code></li>
              </ol>

              
              <ol start="176" class="post-context"
                  id="post-81" onclick="toggle(81);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>      add_chain_to(ex, new_chain)
</code></li>
                
                <li class="post-context-line"><code>      raise ex
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    protected :invoke_with_call_chain
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;rubies&#x2F;ruby-1.9.3-p448&#x2F;lib&#x2F;ruby&#x2F;1.9.1&#x2F;monitor.rb</code> in
                <code><strong>mon_synchronize</strong></code>
            </li>

            <li class="code app">
              
              <ol start="204"
                  class="pre-context" id="pre-82"
                  onclick="toggle(82);">
                
                <li class="pre-context-line"><code>  # Enters exclusive section and executes the block.  Leaves the exclusive
</code></li>
                
                <li class="pre-context-line"><code>  # section automatically when the block exits.  See example under
</code></li>
                
                <li class="pre-context-line"><code>  # +MonitorMixin+.
</code></li>
                
                <li class="pre-context-line"><code>  #
</code></li>
                
                <li class="pre-context-line"><code>  def mon_synchronize
</code></li>
                
                <li class="pre-context-line"><code>    mon_enter
</code></li>
                
                <li class="pre-context-line"><code>    begin
</code></li>
                
              </ol>
              

              <ol start="211" class="context" id="82"
                  onclick="toggle(82);">
                <li class="context-line" id="context-82"><code>      yield</code></li>
              </ol>

              
              <ol start="212" class="post-context"
                  id="post-82" onclick="toggle(82);">
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      mon_exit
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>  alias synchronize mon_synchronize
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>  #
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>invoke_with_call_chain</strong></code>
            </li>

            <li class="code app">
              
              <ol start="161"
                  class="pre-context" id="pre-83"
                  onclick="toggle(83);">
                
                <li class="pre-context-line"><code>      invoke_with_call_chain(task_args, InvocationChain::EMPTY)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Same as invoke, but explicitly pass a call chain to detect
</code></li>
                
                <li class="pre-context-line"><code>    # circular dependencies.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke_with_call_chain(task_args, invocation_chain) # :nodoc:
</code></li>
                
                <li class="pre-context-line"><code>      new_chain = InvocationChain.append(self, invocation_chain)
</code></li>
                
              </ol>
              

              <ol start="168" class="context" id="83"
                  onclick="toggle(83);">
                <li class="context-line" id="context-83"><code>      @lock.synchronize do</code></li>
              </ol>

              
              <ol start="169" class="post-context"
                  id="post-83" onclick="toggle(83);">
                
                <li class="post-context-line"><code>        if application.options.trace
</code></li>
                
                <li class="post-context-line"><code>          application.trace &quot;** Invoke #{name} #{format_trace_flags}&quot;
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        return if @already_invoked
</code></li>
                
                <li class="post-context-line"><code>        @already_invoked = true
</code></li>
                
                <li class="post-context-line"><code>        invoke_prerequisites(task_args, new_chain)
</code></li>
                
                <li class="post-context-line"><code>        execute(task_args) if needed?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;task.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code app">
              
              <ol start="154"
                  class="pre-context" id="pre-84"
                  onclick="toggle(84);">
                
                <li class="pre-context-line"><code>      @comments = []
</code></li>
                
                <li class="pre-context-line"><code>      self
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Invoke the task if it is needed.  Prerequisites are invoked first.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke(*args)
</code></li>
                
                <li class="pre-context-line"><code>      task_args = TaskArguments.new(arg_names, args)
</code></li>
                
              </ol>
              

              <ol start="161" class="context" id="84"
                  onclick="toggle(84);">
                <li class="context-line" id="context-84"><code>      invoke_with_call_chain(task_args, InvocationChain::EMPTY)</code></li>
              </ol>

              
              <ol start="162" class="post-context"
                  id="post-84" onclick="toggle(84);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Same as invoke, but explicitly pass a call chain to detect
</code></li>
                
                <li class="post-context-line"><code>    # circular dependencies.
</code></li>
                
                <li class="post-context-line"><code>    def invoke_with_call_chain(task_args, invocation_chain) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      new_chain = InvocationChain.append(self, invocation_chain)
</code></li>
                
                <li class="post-context-line"><code>      @lock.synchronize do
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>invoke_task</strong></code>
            </li>

            <li class="code app">
              
              <ol start="142"
                  class="pre-context" id="pre-85"
                  onclick="toggle(85);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # private ----------------------------------------------------------------
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def invoke_task(task_string)
</code></li>
                
                <li class="pre-context-line"><code>      name, args = parse_task_string(task_string)
</code></li>
                
                <li class="pre-context-line"><code>      t = self[name]
</code></li>
                
              </ol>
              

              <ol start="149" class="context" id="85"
                  onclick="toggle(85);">
                <li class="context-line" id="context-85"><code>      t.invoke(*args)</code></li>
              </ol>

              
              <ol start="150" class="post-context"
                  id="post-85" onclick="toggle(85);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def parse_task_string(string)
</code></li>
                
                <li class="post-context-line"><code>      if string =~ &#x2F;^([^\[]+)(\[(.*)\])$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>        name = $1
</code></li>
                
                <li class="post-context-line"><code>        args = $3.split(&#x2F;\s*,\s*&#x2F;)
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>block (2 levels) in top_level</strong></code>
            </li>

            <li class="code app">
              
              <ol start="99"
                  class="pre-context" id="pre-86"
                  onclick="toggle(86);">
                
                <li class="pre-context-line"><code>    def top_level
</code></li>
                
                <li class="pre-context-line"><code>      run_with_threads do
</code></li>
                
                <li class="pre-context-line"><code>        if options.show_tasks
</code></li>
                
                <li class="pre-context-line"><code>          display_tasks_and_comments
</code></li>
                
                <li class="pre-context-line"><code>        elsif options.show_prereqs
</code></li>
                
                <li class="pre-context-line"><code>          display_prerequisites
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="106" class="context" id="86"
                  onclick="toggle(86);">
                <li class="context-line" id="context-86"><code>          top_level_tasks.each { |task_name| invoke_task(task_name) }</code></li>
              </ol>

              
              <ol start="107" class="post-context"
                  id="post-86" onclick="toggle(86);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Run the given block with the thread startup and shutdown.
</code></li>
                
                <li class="post-context-line"><code>    def run_with_threads
</code></li>
                
                <li class="post-context-line"><code>      thread_pool.gather_history if options.job_stats == :history
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code app">
              
              <ol start="99"
                  class="pre-context" id="pre-87"
                  onclick="toggle(87);">
                
                <li class="pre-context-line"><code>    def top_level
</code></li>
                
                <li class="pre-context-line"><code>      run_with_threads do
</code></li>
                
                <li class="pre-context-line"><code>        if options.show_tasks
</code></li>
                
                <li class="pre-context-line"><code>          display_tasks_and_comments
</code></li>
                
                <li class="pre-context-line"><code>        elsif options.show_prereqs
</code></li>
                
                <li class="pre-context-line"><code>          display_prerequisites
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="106" class="context" id="87"
                  onclick="toggle(87);">
                <li class="context-line" id="context-87"><code>          top_level_tasks.each { |task_name| invoke_task(task_name) }</code></li>
              </ol>

              
              <ol start="107" class="post-context"
                  id="post-87" onclick="toggle(87);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Run the given block with the thread startup and shutdown.
</code></li>
                
                <li class="post-context-line"><code>    def run_with_threads
</code></li>
                
                <li class="post-context-line"><code>      thread_pool.gather_history if options.job_stats == :history
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>block in top_level</strong></code>
            </li>

            <li class="code app">
              
              <ol start="99"
                  class="pre-context" id="pre-88"
                  onclick="toggle(88);">
                
                <li class="pre-context-line"><code>    def top_level
</code></li>
                
                <li class="pre-context-line"><code>      run_with_threads do
</code></li>
                
                <li class="pre-context-line"><code>        if options.show_tasks
</code></li>
                
                <li class="pre-context-line"><code>          display_tasks_and_comments
</code></li>
                
                <li class="pre-context-line"><code>        elsif options.show_prereqs
</code></li>
                
                <li class="pre-context-line"><code>          display_prerequisites
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="106" class="context" id="88"
                  onclick="toggle(88);">
                <li class="context-line" id="context-88"><code>          top_level_tasks.each { |task_name| invoke_task(task_name) }</code></li>
              </ol>

              
              <ol start="107" class="post-context"
                  id="post-88" onclick="toggle(88);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Run the given block with the thread startup and shutdown.
</code></li>
                
                <li class="post-context-line"><code>    def run_with_threads
</code></li>
                
                <li class="post-context-line"><code>      thread_pool.gather_history if options.job_stats == :history
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>run_with_threads</strong></code>
            </li>

            <li class="code app">
              
              <ol start="108"
                  class="pre-context" id="pre-89"
                  onclick="toggle(89);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the given block with the thread startup and shutdown.
</code></li>
                
                <li class="pre-context-line"><code>    def run_with_threads
</code></li>
                
                <li class="pre-context-line"><code>      thread_pool.gather_history if options.job_stats == :history
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="115" class="context" id="89"
                  onclick="toggle(89);">
                <li class="context-line" id="context-89"><code>      yield</code></li>
              </ol>

              
              <ol start="116" class="post-context"
                  id="post-89" onclick="toggle(89);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      thread_pool.join
</code></li>
                
                <li class="post-context-line"><code>      if options.job_stats
</code></li>
                
                <li class="post-context-line"><code>        stats = thread_pool.statistics
</code></li>
                
                <li class="post-context-line"><code>        puts &quot;Maximum active threads: #{stats[:max_active_threads]}&quot;
</code></li>
                
                <li class="post-context-line"><code>        puts &quot;Total threads in play:  #{stats[:total_threads_in_play]}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>top_level</strong></code>
            </li>

            <li class="code app">
              
              <ol start="93"
                  class="pre-context" id="pre-90"
                  onclick="toggle(90);">
                
                <li class="pre-context-line"><code>      standard_exception_handling do
</code></li>
                
                <li class="pre-context-line"><code>        raw_load_rakefile
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the top level tasks of a Rake application.
</code></li>
                
                <li class="pre-context-line"><code>    def top_level
</code></li>
                
              </ol>
              

              <ol start="100" class="context" id="90"
                  onclick="toggle(90);">
                <li class="context-line" id="context-90"><code>      run_with_threads do</code></li>
              </ol>

              
              <ol start="101" class="post-context"
                  id="post-90" onclick="toggle(90);">
                
                <li class="post-context-line"><code>        if options.show_tasks
</code></li>
                
                <li class="post-context-line"><code>          display_tasks_and_comments
</code></li>
                
                <li class="post-context-line"><code>        elsif options.show_prereqs
</code></li>
                
                <li class="post-context-line"><code>          display_prerequisites
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          top_level_tasks.each { |task_name| invoke_task(task_name) }
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code app">
              
              <ol start="71"
                  class="pre-context" id="pre-91"
                  onclick="toggle(91);">
                
                <li class="pre-context-line"><code>    # If you wish to build a custom rake command, you should call
</code></li>
                
                <li class="pre-context-line"><code>    # +init+ on your application.  Then define any tasks.  Finally,
</code></li>
                
                <li class="pre-context-line"><code>    # call +top_level+ to run your top level tasks.
</code></li>
                
                <li class="pre-context-line"><code>    def run
</code></li>
                
                <li class="pre-context-line"><code>      standard_exception_handling do
</code></li>
                
                <li class="pre-context-line"><code>        init
</code></li>
                
                <li class="pre-context-line"><code>        load_rakefile
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="91"
                  onclick="toggle(91);">
                <li class="context-line" id="context-91"><code>        top_level</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-91" onclick="toggle(91);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Initialize the command line parameters and app name.
</code></li>
                
                <li class="post-context-line"><code>    def init(app_name=&#x27;rake&#x27;)
</code></li>
                
                <li class="post-context-line"><code>      standard_exception_handling do
</code></li>
                
                <li class="post-context-line"><code>        @name = app_name
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>standard_exception_handling</strong></code>
            </li>

            <li class="code app">
              
              <ol start="158"
                  class="pre-context" id="pre-92"
                  onclick="toggle(92);">
                
                <li class="pre-context-line"><code>        args = []
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      [name, args]
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Provide standard exception handling for the given block.
</code></li>
                
                <li class="pre-context-line"><code>    def standard_exception_handling
</code></li>
                
              </ol>
              

              <ol start="165" class="context" id="92"
                  onclick="toggle(92);">
                <li class="context-line" id="context-92"><code>      yield</code></li>
              </ol>

              
              <ol start="166" class="post-context"
                  id="post-92" onclick="toggle(92);">
                
                <li class="post-context-line"><code>    rescue SystemExit
</code></li>
                
                <li class="post-context-line"><code>      # Exit silently with current status
</code></li>
                
                <li class="post-context-line"><code>      raise
</code></li>
                
                <li class="post-context-line"><code>    rescue OptionParser::InvalidOption =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>      $stderr.puts ex.message
</code></li>
                
                <li class="post-context-line"><code>      exit(false)
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception =&gt; ex
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;lib&#x2F;rake&#x2F;application.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code app">
              
              <ol start="68"
                  class="pre-context" id="pre-93"
                  onclick="toggle(93);">
                
                <li class="pre-context-line"><code>    # * Define the tasks (+load_rakefile+).
</code></li>
                
                <li class="pre-context-line"><code>    # * Run the top level tasks (+top_level+).
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # If you wish to build a custom rake command, you should call
</code></li>
                
                <li class="pre-context-line"><code>    # +init+ on your application.  Then define any tasks.  Finally,
</code></li>
                
                <li class="pre-context-line"><code>    # call +top_level+ to run your top level tasks.
</code></li>
                
                <li class="pre-context-line"><code>    def run
</code></li>
                
              </ol>
              

              <ol start="75" class="context" id="93"
                  onclick="toggle(93);">
                <li class="context-line" id="context-93"><code>      standard_exception_handling do</code></li>
              </ol>

              
              <ol start="76" class="post-context"
                  id="post-93" onclick="toggle(93);">
                
                <li class="post-context-line"><code>        init
</code></li>
                
                <li class="post-context-line"><code>        load_rakefile
</code></li>
                
                <li class="post-context-line"><code>        top_level
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Initialize the command line parameters and app name.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;gems&#x2F;rake-10.1.0&#x2F;bin&#x2F;rake</code> in
                <code><strong>&lt;top (required)&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="26"
                  class="pre-context" id="pre-94"
                  onclick="toggle(94);">
                
                <li class="pre-context-line"><code>  require &#x27;rubygems&#x27;
</code></li>
                
                <li class="pre-context-line"><code>  gem &#x27;rake&#x27;
</code></li>
                
                <li class="pre-context-line"><code>rescue LoadError
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;rake&#x27;
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="33" class="context" id="94"
                  onclick="toggle(94);">
                <li class="context-line" id="context-94"><code>Rake.application.run</code></li>
              </ol>

              
              <ol start="34" class="post-context"
                  id="post-94" onclick="toggle(94);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;bin&#x2F;rake</code> in
                <code><strong>load</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-95"
                  onclick="toggle(95);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;rake&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="95"
                  onclick="toggle(95);">
                <li class="context-line" id="context-95"><code>load Gem.bin_path(&#x27;rake&#x27;, &#x27;rake&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-95" onclick="toggle(95);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@global&#x2F;bin&#x2F;rake</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-96"
                  onclick="toggle(96);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;rake&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="96"
                  onclick="toggle(96);">
                <li class="context-line" id="context-96"><code>load Gem.bin_path(&#x27;rake&#x27;, &#x27;rake&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-96" onclick="toggle(96);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;bin&#x2F;ruby_executable_hooks</code> in
                <code><strong>eval</strong></code>
            </li>

            <li class="code system">
              
              <ol start="8"
                  class="pre-context" id="pre-97"
                  onclick="toggle(97);">
                
                <li class="pre-context-line"><code>begin
</code></li>
                
                <li class="pre-context-line"><code>  require &#x27;executable-hooks&#x2F;hooks&#x27;
</code></li>
                
                <li class="pre-context-line"><code>  Gem::ExecutableHooks.run($0)
</code></li>
                
                <li class="pre-context-line"><code>rescue LoadError
</code></li>
                
                <li class="pre-context-line"><code>  warn &quot;unable to load executable-hooks&#x2F;hooks&quot; if ENV.key?(&#x27;ExecutableHooks_DEBUG&#x27;)
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="15" class="context" id="97"
                  onclick="toggle(97);">
                <li class="context-line" id="context-97"><code>eval File.read($0), binding, $0</code></li>
              </ol>

              
              <ol start="16" class="post-context"
                  id="post-97" onclick="toggle(97);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;bin&#x2F;ruby_executable_hooks</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="8"
                  class="pre-context" id="pre-98"
                  onclick="toggle(98);">
                
                <li class="pre-context-line"><code>begin
</code></li>
                
                <li class="pre-context-line"><code>  require &#x27;executable-hooks&#x2F;hooks&#x27;
</code></li>
                
                <li class="pre-context-line"><code>  Gem::ExecutableHooks.run($0)
</code></li>
                
                <li class="pre-context-line"><code>rescue LoadError
</code></li>
                
                <li class="pre-context-line"><code>  warn &quot;unable to load executable-hooks&#x2F;hooks&quot; if ENV.key?(&#x27;ExecutableHooks_DEBUG&#x27;)
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="15" class="context" id="98"
                  onclick="toggle(98);">
                <li class="context-line" id="context-98"><code>eval File.read($0), binding, $0</code></li>
              </ol>

              
              <ol start="16" class="post-context"
                  id="post-98" onclick="toggle(98);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <p class="no-data">No POST data.</p>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <p class="no-data">No cookie data.</p>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>CONTENT_LENGTH</td>
           <td class="code"><div>0</div></td>
         </tr>
         
         <tr>
           <td>HTTPS</td>
           <td class="code"><div>off</div></td>
         </tr>
         
         <tr>
           <td>HTTP_COOKIE</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>example.org</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;js&#x2F;extjs&#x2F;resources&#x2F;sass&#x2F;ext-all-gray.css</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>GET</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>example.org</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>80</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x9932f98&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;StringIO:0x9b13650&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Rack::NullLogger:0x9aa7554 @app=#&lt;Rack::Protection::FrameOptions:0x9aa83a0 @app=#&lt;Rack::Protection::HttpOrigin:0x98feb94 @app=#&lt;Rack::Protection::IPSpoofing:0x98ff990 @app=#&lt;Rack::Protection::JsonCsrf:0x9900d04 @app=#&lt;Rack::Protection::PathTraversal:0x99012e0 @app=#&lt;Rack::Protection::XSSHeader:0x9901754 @app=#&lt;AxAgenda:0x9546fc4 @default_layout=:layout, @app=nil, @template_cache=#&lt;Tilt::Cache:0x9546fb0 @cache={[:scss, &quot;$theme-name: &#x27;gray&#x27;;\n$base-color: #ccc;\n\n&#x2F;&#x2F;panel\n$panel-header-background-gradient: color-stops(#F0F0F0, #D7D7D7);\n$panel-border-color: #D0D0D0;\n$panel-header-color: #333;\n\n$panel-frame-background-color: #f1f1f1;\n\n&#x2F;&#x2F;window\n$window-background-color: #e8e8e8;\n$window-header-color: #333;\n\n&#x2F;&#x2F;menu\n$menu-item-active-background-color: darken(#f3f3f3, 5);\n$menu-item-active-border-color: #9d9d9d;\n\n&#x2F;&#x2F;datepicker\n$datepicker-header-background-color: #6f6f6f;\n$datepicker-border-color: #585858;\n$datepicker-th-background-color: #e9e9e9;\n$datepicker-selected-item-background-color: #d8d8d8;\n$datepicker-item-hover-background-color: transparent;\n\n&#x2F;&#x2F;progress bar\n$progress-border-color: #8e8e8e;\n$progress-background-color: #f1f1f1;\n$progress-bar-background-color: #ababab;\n\n&#x2F;&#x2F;tips\n$tip-base-color: $base-color;\n\n&#x2F;&#x2F;grid\n$grid-header-over-border-color: darken($base-color, 3);\n\n&#x2F;&#x2F;toolbar\n$toolbar-background-gradient: color-stops(#e6e6e6, #efefef);\n$toolbar-separator-color: #aca899;\n$toolbar-text-color: #000;\n\n&#x2F;&#x2F;btn group\n$btn-group-background-color: #f0f0f0;\n$btn-group-header-background-color: #dfdfdf;\n$btn-group-border-color: #d0d0d0;\n$btn-group-header-color: #666;\n$btn-group-inner-border-color: #ececec;\n\n&#x2F;&#x2F;form\n$fieldset-header-color: #333;\n\n$boundlist-border-color: #b5b8c8;\n\n&#x2F;&#x2F;acordion\n$accordion-header-background-color: #e5e5e5;\n\n&#x2F;&#x2F;tabs\n$tab-base-color: #eaeaea;\n$tab-color-active: #333333;\n\n$tab-background-gradient: color-stops(#dcdcdc, #eaeaea);\n$tab-background-gradient-over: &#x27;tab-over&#x27; !default;\n$tab-background-gradient-active: color-stops(#ffffff, #eaeaea);\n$tab-background-gradient-disabled: &#x27;tab-disabled&#x27; !default;\n\n&#x2F;&#x2F;buttons\n$button-default-base-color: #f8f8f8;\n$button-default-base-color-over: #f3f3f3;\n$button-default-base-color-focus: $button-default-base-color-over;\n$button-default-base-color-pressed: #d6d6d6;\n$button-default-base-color-disabled: adjust-color($base-color, $hue: 0deg, $saturation: -55.556%, $lightness: 12.745%) !default; &#x2F;&#x2F;F7F7F7\n\n$button-default-border-color: #bbbbbb;\n$button-default-border-color-over: #9d9d9d;\n$button-default-border-color-focus: $button-default-border-color-over;\n$button-default-border-color-pressed: $button-default-border-color-over;\n$button-default-border-color-disabled: adjust-color($button-default-base-color-disabled, $hue: 0deg, $saturation: 0%, $lightness: -8.627%) !default;\n\n$button-default-background-gradient: &#x27;matte&#x27;;\n$button-default-background-gradient-over: &#x27;matte&#x27;;\n$button-default-background-gradient-focus: &#x27;matte&#x27;;\n$button-default-background-gradient-pressed: &#x27;matte-reverse&#x27;;\n$button-default-background-gradient-disabled: &#x27;matte&#x27;;\n\n$button-default-background-gradient-color-stops: null;\n$button-default-background-gradient-color-stops-over: null;\n$button-default-background-gradient-color-stops-focus: null;\n$button-default-background-gradient-color-stops-pressed: null;\n$button-default-background-gradient-color-stops-disabled: null;\n\n\n$button-toolbar-base-color: $button-default-base-color;\n\n$button-toolbar-border-color: transparent !default;\n$button-toolbar-border-color-over: $button-default-border-color-over;\n$button-toolbar-border-color-focus: $button-default-border-color-focus;\n$button-toolbar-border-color-pressed: $button-default-border-color-pressed;\n$button-toolbar-border-color-disabled: $button-default-border-color-disabled;\n\n$button-toolbar-background-color: transparent !default;\n$button-toolbar-background-color-over: $button-default-base-color-over;\n$button-toolbar-background-color-focus: $button-default-base-color-focus;\n$button-toolbar-background-color-pressed: $button-default-base-color-pressed;\n$button-toolbar-background-color-disabled: transparent;\n\n$button-toolbar-background-gradient: null;\n$button-toolbar-background-gradient-over: &#x27;matte&#x27;;\n$button-toolbar-background-gradient-focus: &#x27;matte&#x27;;\n$button-toolbar-background-gradient-pressed: &#x27;matte-reverse&#x27;;\n$button-toolbar-background-gradient-disabled: null;\n\n$button-toolbar-background-gradient-color-stops: null;\n$button-toolbar-background-gradient-color-stops-over: null;\n$button-toolbar-background-gradient-color-stops-focus: null;\n$button-toolbar-background-gradient-color-stops-pressed: null;\n$button-toolbar-background-gradient-color-stops-disabled: null;\n\n@import &#x27;compass&#x27;;\n@import &#x27;ext4&#x2F;default&#x2F;all&#x27;;&quot;, {:filename=&gt;&quot;&#x2F;home&#x2F;greg&#x2F;WORK&#x2F;AUXILIAE&#x2F;sinatra-bootstrap&#x2F;public&#x2F;js&#x2F;extjs&#x2F;resources&#x2F;sass&#x2F;ext-all-gray.scss&quot;, :outvar=&gt;&quot;@_out_buf&quot;, :default_encoding=&gt;&quot;utf-8&quot;}, &quot;views&quot;]=&gt;#&lt;Tilt::ScssTemplate:0x9560ec4 @options={:filename=&gt;&quot;&#x2F;home&#x2F;greg&#x2F;WORK&#x2F;AUXILIAE&#x2F;sinatra-bootstrap&#x2F;public&#x2F;js&#x2F;extjs&#x2F;resources&#x2F;sass&#x2F;ext-all-gray.scss&quot;, :outvar=&gt;&quot;@_out_buf&quot;}, @line=90, @file=&quot;&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;class_methods.rb&quot;, @compiled_method={}, @default_encoding=&quot;utf-8&quot;, @reader=#&lt;Proc:0x9b18358@&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-1.4.3&#x2F;lib&#x2F;sinatra&#x2F;base.rb:840&gt;, @data=&quot;$theme-name: &#x27;gray&#x27;;\n$base-color: #ccc;\n\n&#x2F;&#x2F;panel\n$panel-header-background-gradient: color-stops(#F0F0F0, #D7D7D7);\n$panel-border-color: #D0D0D0;\n$panel-header-color: #333;\n\n$panel-frame-background-color: #f1f1f1;\n\n&#x2F;&#x2F;window\n$window-background-color: #e8e8e8;\n$window-header-color: #333;\n\n&#x2F;&#x2F;menu\n$menu-item-active-background-color: darken(#f3f3f3, 5);\n$menu-item-active-border-color: #9d9d9d;\n\n&#x2F;&#x2F;datepicker\n$datepicker-header-background-color: #6f6f6f;\n$datepicker-border-color: #585858;\n$datepicker-th-background-color: #e9e9e9;\n$datepicker-selected-item-background-color: #d8d8d8;\n$datepicker-item-hover-background-color: transparent;\n\n&#x2F;&#x2F;progress bar\n$progress-border-color: #8e8e8e;\n$progress-background-color: #f1f1f1;\n$progress-bar-background-color: #ababab;\n\n&#x2F;&#x2F;tips\n$tip-base-color: $base-color;\n\n&#x2F;&#x2F;grid\n$grid-header-over-border-color: darken($base-color, 3);\n\n&#x2F;&#x2F;toolbar\n$toolbar-background-gradient: color-stops(#e6e6e6, #efefef);\n$toolbar-separator-color: #aca899;\n$toolbar-text-color: #000;\n\n&#x2F;&#x2F;btn group\n$btn-group-background-color: #f0f0f0;\n$btn-group-header-background-color: #dfdfdf;\n$btn-group-border-color: #d0d0d0;\n$btn-group-header-color: #666;\n$btn-group-inner-border-color: #ececec;\n\n&#x2F;&#x2F;form\n$fieldset-header-color: #333;\n\n$boundlist-border-color: #b5b8c8;\n\n&#x2F;&#x2F;acordion\n$accordion-header-background-color: #e5e5e5;\n\n&#x2F;&#x2F;tabs\n$tab-base-color: #eaeaea;\n$tab-color-active: #333333;\n\n$tab-background-gradient: color-stops(#dcdcdc, #eaeaea);\n$tab-background-gradient-over: &#x27;tab-over&#x27; !default;\n$tab-background-gradient-active: color-stops(#ffffff, #eaeaea);\n$tab-background-gradient-disabled: &#x27;tab-disabled&#x27; !default;\n\n&#x2F;&#x2F;buttons\n$button-default-base-color: #f8f8f8;\n$button-default-base-color-over: #f3f3f3;\n$button-default-base-color-focus: $button-default-base-color-over;\n$button-default-base-color-pressed: #d6d6d6;\n$button-default-base-color-disabled: adjust-color($base-color, $hue: 0deg, $saturation: -55.556%, $lightness: 12.745%) !default; &#x2F;&#x2F;F7F7F7\n\n$button-default-border-color: #bbbbbb;\n$button-default-border-color-over: #9d9d9d;\n$button-default-border-color-focus: $button-default-border-color-over;\n$button-default-border-color-pressed: $button-default-border-color-over;\n$button-default-border-color-disabled: adjust-color($button-default-base-color-disabled, $hue: 0deg, $saturation: 0%, $lightness: -8.627%) !default;\n\n$button-default-background-gradient: &#x27;matte&#x27;;\n$button-default-background-gradient-over: &#x27;matte&#x27;;\n$button-default-background-gradient-focus: &#x27;matte&#x27;;\n$button-default-background-gradient-pressed: &#x27;matte-reverse&#x27;;\n$button-default-background-gradient-disabled: &#x27;matte&#x27;;\n\n$button-default-background-gradient-color-stops: null;\n$button-default-background-gradient-color-stops-over: null;\n$button-default-background-gradient-color-stops-focus: null;\n$button-default-background-gradient-color-stops-pressed: null;\n$button-default-background-gradient-color-stops-disabled: null;\n\n\n$button-toolbar-base-color: $button-default-base-color;\n\n$button-toolbar-border-color: transparent !default;\n$button-toolbar-border-color-over: $button-default-border-color-over;\n$button-toolbar-border-color-focus: $button-default-border-color-focus;\n$button-toolbar-border-color-pressed: $button-default-border-color-pressed;\n$button-toolbar-border-color-disabled: $button-default-border-color-disabled;\n\n$button-toolbar-background-color: transparent !default;\n$button-toolbar-background-color-over: $button-default-base-color-over;\n$button-toolbar-background-color-focus: $button-default-base-color-focus;\n$button-toolbar-background-color-pressed: $button-default-base-color-pressed;\n$button-toolbar-background-color-disabled: transparent;\n\n$button-toolbar-background-gradient: null;\n$button-toolbar-background-gradient-over: &#x27;matte&#x27;;\n$button-toolbar-background-gradient-focus: &#x27;matte&#x27;;\n$button-toolbar-background-gradient-pressed: &#x27;matte-reverse&#x27;;\n$button-toolbar-background-gradient-disabled: null;\n\n$button-toolbar-background-gradient-color-stops: null;\n$button-toolbar-background-gradient-color-stops-over: null;\n$button-toolbar-background-gradient-color-stops-focus: null;\n$button-toolbar-background-gradient-color-stops-pressed: null;\n$button-toolbar-background-gradient-color-stops-disabled: null;\n\n@import &#x27;compass&#x27;;\n@import &#x27;ext4&#x2F;default&#x2F;all&#x27;;&quot;, @engine=#&lt;Sass::Engine:0x9560ab4 @options={:style=&gt;:nested, :load_paths=&gt;[&#x2F;home&#x2F;greg&#x2F;WORK&#x2F;AUXILIAE&#x2F;sinatra-bootstrap], :cache=&gt;true, :cache_location=&gt;&quot;.&#x2F;.sass-cache&quot;, :syntax=&gt;:scss, :filesystem_importer=&gt;Sass::Importers::Filesystem, :filename=&gt;&quot;&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;class_methods.rb&quot;, :outvar=&gt;&quot;@_out_buf&quot;, :line=&gt;90, :importer=&gt;&#x2F;home&#x2F;greg&#x2F;WORK&#x2F;AUXILIAE&#x2F;sinatra-bootstrap, :original_filename=&gt;&quot;&#x2F;home&#x2F;greg&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.3-p448@axagenda&#x2F;gems&#x2F;sinatra-assetpack-0.3.1&#x2F;lib&#x2F;sinatra&#x2F;assetpack&#x2F;class_methods.rb&quot;, :cache_store=&gt;#&lt;Sass::CacheStores::Chain:0x95607bc @caches=[#&lt;Sass::CacheStores::Memory:0x956080c @contents={&quot;b9417fbfc8906b506d6d4fa6d1805290e69ebcad&#x2F;class_methods.rbc&quot;=&gt;{:sha=&gt;&quot;eee730799932746f73127f9d960c31fa72a171dc&quot;, :obj=&gt;(Sass::Tree::RootNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::CommentNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::VariableNode Sass::Tree::ImportNode Sass::Tree::ImportNode)}}&gt;, #&lt;Sass::CacheStores::Filesystem:0x95607d0 @cache_location=&quot;.&#x2F;.sass-cache&quot;&gt;]&gt;, :line_comments=&gt;nil, :property_syntax=&gt;nil}, @template=&quot;$theme-name: &#x27;gray&#x27;;\n$base-color: #ccc;\n\n&#x2F;&#x2F;panel\n$panel-header-background-gradient: color-stops(#F0F0F0, #D7D7D7);\n$panel-border-color: #D0D0D0;\n$panel-header-color: #333;\n\n$panel-frame-background-color: #f1f1f1;\n\n&#x2F;&#x2F;window\n$window-background-color: #e8e8e8;\n$window-header-color: #333;\n\n&#x2F;&#x2F;menu\n$menu-item-active-background-color: darken(#f3f3f3, 5);\n$menu-item-active-border-color: #9d9d9d;\n\n&#x2F;&#x2F;datepicker\n$datepicker-header-background-color: #6f6f6f;\n$datepicker-border-color: #585858;\n$datepicker-th-background-color: #e9e9e9;\n$datepicker-selected-item-background-color: #d8d8d8;\n$datepicker-item-hover-background-color: transparent;\n\n&#x2F;&#x2F;progress bar\n$progress-border-color: #8e8e8e;\n$progress-background-color: #f1f1f1;\n$progress-bar-background-color: #ababab;\n\n&#x2F;&#x2F;tips\n$tip-base-color: $base-color;\n\n&#x2F;&#x2F;grid\n$grid-header-over-border-color: darken($base-color, 3);\n\n&#x2F;&#x2F;toolbar\n$toolbar-background-gradient: color-stops(#e6e6e6, #efefef);\n$toolbar-separator-color: #aca899;\n$toolbar-text-color: #000;\n\n&#x2F;&#x2F;btn group\n$btn-group-background-color: #f0f0f0;\n$btn-group-header-background-color: #dfdfdf;\n$btn-group-border-color: #d0d0d0;\n$btn-group-header-color: #666;\n$btn-group-inner-border-color: #ececec;\n\n&#x2F;&#x2F;form\n$fieldset-header-color: #333;\n\n$boundlist-border-color: #b5b8c8;\n\n&#x2F;&#x2F;acordion\n$accordion-header-background-color: #e5e5e5;\n\n&#x2F;&#x2F;tabs\n$tab-base-color: #eaeaea;\n$tab-color-active: #333333;\n\n$tab-background-gradient: color-stops(#dcdcdc, #eaeaea);\n$tab-background-gradient-over: &#x27;tab-over&#x27; !default;\n$tab-background-gradient-active: color-stops(#ffffff, #eaeaea);\n$tab-background-gradient-disabled: &#x27;tab-disabled&#x27; !default;\n\n&#x2F;&#x2F;buttons\n$button-default-base-color: #f8f8f8;\n$button-default-base-color-over: #f3f3f3;\n$button-default-base-color-focus: $button-default-base-color-over;\n$button-default-base-color-pressed: #d6d6d6;\n$button-default-base-color-disabled: adjust-color($base-color, $hue: 0deg, $saturation: -55.556%, $lightness: 12.745%) !default; &#x2F;&#x2F;F7F7F7\n\n$button-default-border-color: #bbbbbb;\n$button-default-border-color-over: #9d9d9d;\n$button-default-border-color-focus: $button-default-border-color-over;\n$button-default-border-color-pressed: $button-default-border-color-over;\n$button-default-border-color-disabled: adjust-color($button-default-base-color-disabled, $hue: 0deg, $saturation: 0%, $lightness: -8.627%) !default;\n\n$button-default-background-gradient: &#x27;matte&#x27;;\n$button-default-background-gradient-over: &#x27;matte&#x27;;\n$button-default-background-gradient-focus: &#x27;matte&#x27;;\n$button-default-background-gradient-pressed: &#x27;matte-reverse&#x27;;\n$button-default-background-gradient-disabled: &#x27;matte&#x27;;\n\n$button-default-background-gradient-color-stops: null;\n$button-default-background-gradient-color-stops-over: null;\n$button-default-background-gradient-color-stops-focus: null;\n$button-default-background-gradient-color-stops-pressed: null;\n$button-default-background-gradient-color-stops-disabled: null;\n\n\n$button-toolbar-base-color: $button-default-base-color;\n\n$button-toolbar-border-color: transparent !default;\n$button-toolbar-border-color-over: $button-default-border-color-over;\n$button-toolbar-border-color-focus: $button-default-border-color-focus;\n$button-toolbar-border-color-pressed: $button-default-border-color-pressed;\n$button-toolbar-border-color-disabled: $button-default-border-color-disabled;\n\n$button-toolbar-background-color: transparent !default;\n$button-toolbar-background-color-over: $button-default-base-color-over;\n$button-toolbar-background-color-focus: $button-default-base-color-focus;\n$button-toolbar-background-color-pressed: $button-default-base-color-pressed;\n$button-toolbar-background-color-disabled: transparent;\n\n$button-toolbar-background-gradient: null;\n$button-toolbar-background-gradient-over: &#x27;matte&#x27;;\n$button-toolbar-background-gradient-focus: &#x27;matte&#x27;;\n$button-toolbar-background-gradient-pressed: &#x27;matte-reverse&#x27;;\n$button-toolbar-background-gradient-disabled: null;\n\n$button-toolbar-background-gradient-color-stops: null;\n$button-toolbar-background-gradient-color-stops-over: null;\n$button-toolbar-background-gradient-color-stops-focus: null;\n$button-toolbar-background-gradient-color-stops-pressed: null;\n$button-toolbar-background-gradient-color-stops-disabled: null;\n\n@import &#x27;compass&#x27;;\n@import &#x27;ext4&#x2F;default&#x2F;all&#x27;;&quot;, @checked_encoding=true, @original_encoding=#&lt;Encoding:UTF-8&gt;&gt;&gt;}&gt;&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :frame_options=&gt;:sameorigin, :except=&gt;[:session_hijacking, :remote_token]}&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.test</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 1]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.accept</td>
           <td class="code"><div>[]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;Sass::SyntaxError: File to import not found or unreadable: compass.
Load path: &#x2F;home&#x2F;greg&#x2F;WORK&#x2F;AUXILIAE&#x2F;sinatra-bootstrap&gt;</div></td>
         </tr>
         
         <tr>
           <td>sinatra.route</td>
           <td class="code"><div>GET (?-mix:^\&#x2F;js\&#x2F;(.*)$)</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>
